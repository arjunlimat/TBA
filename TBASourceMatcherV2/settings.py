"""
Django settings for TBASourceMatcherV2 project.

Generated by 'django-admin startproject' using Django 2.2.
"""

import os

# ============================= PROJECT VARIABLES =============================
# --------------------------PROJECT STATE VARIABLES ---------------------------
DEBUG = os.environ.get("DEBUG", True)
APPLICATION_NAME: str = "TBASOURCEMATCHER-SERVICE"
APPLICATION_PORT: int = int(os.environ["APPLICATION_PORT"])
CONTENT_TYPE: str = os.environ["CONTENT_TYPE"]
ENVIRONMENT_VARIABLE: str = os.environ["ENVIRONMENT_VARIABLE"]
WORKERS = 2

# -------------------------- PROJECT URL VARIABLES ---------------------------
EUREKA_URL: str = os.environ["EUREKA_URL"]
ZUUL: str = os.environ["ZUUL_URL"]
TBA_API_URL = os.environ["TBA_API_URL"]
RULE_ENGINE_URL = os.environ["RULE_ENGINE_URL"]

REDIS_URL = ZUUL + "redis/docstore/get"
REDIS_URL_SET = ZUUL + "redis/docstore/set"
TBA_INQUIRY_URL = ZUUL + "tbaenquiry/inquiry/generalInquiry/"
TBA_UPDATE_URL = ZUUL + "tbaupdate/App/update/"
EXCEL_FORMATTER_URL = ZUUL + "excelformatter/create_excel/"

# ------------------------ Zipkin-kafka Tracing Settings ----------------------
PROJECT_NAME = "TBASourceMatcher"
ZIPKIN_URL: str = os.environ.get("ZIPKIN_URL", "")
ZIPKIN_SPAN: int = 9000
ZIPKIN_SAMPLE_RATE: int = 100

# =========================== DJANGO SETTINGS ================================
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))

# TODO: Move this to secret management or elsewhere
SECRET_KEY = "un9deg2mtcq8f^m5wc=k*de^(t!v!eo4!y-s7!6b2wl6gl0ee^"

ALLOWED_HOSTS = ["*"]

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "rest_framework",
    "corsheaders",
]

MIDDLEWARE = [
    "TBASourceMatcherV2.middleware.RemoveHeaders",
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
    "csp.middleware.CSPMiddleware",
    "corsheaders.middleware.CorsMiddleware",
]

ROOT_URLCONF = "TBASourceMatcherV2.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "TBASourceMatcherV2.wsgi.application"

DATABASES = {
    "default": {
        "ENGINE": "django.db.backends.sqlite3",
        "NAME": os.path.join(BASE_DIR, "db.sqlite3"),
    }
}

AUTH_PASSWORD_VALIDATORS = [
    {"NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator", },
    {"NAME": "django.contrib.auth.password_validation.MinimumLengthValidator", },
    {"NAME": "django.contrib.auth.password_validation.CommonPasswordValidator", },
    {"NAME": "django.contrib.auth.password_validation.NumericPasswordValidator", },
]

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True

REST_FRAMEWORK = {
    "DEFAULT_RENDERER_CLASSES": ("rest_framework.renderers.JSONRenderer",),
    "DEFAULT_PARSER_CLASSES": ("rest_framework.parsers.JSONParser",),
}

STATIC_URL = "/static/"

# Security
SECURE_BROWSER_XSS_FILTER = True
SECURE_CONTENT_TYPE_NOSNIFF = True
CSP_DEFAULT_SRC = CSP_SCRIPT_SRC = CSP_OBJECT_SRC = ("'none'",)
CORS_ORIGIN_ALLOW_ALL = True
CORS_ALLOW_METHODS = "POST"
CORS_ALLOW_HEADERS = (
    "x-requested-with",
    "content-type",
    "accept",
    "origin",
    "authorization",
    "x-csrftoken",
)

print("APPLICATION PORT: ", APPLICATION_PORT)
print("CONTENT_TYPE: ", CONTENT_TYPE)
print("EUREKA URL: ", EUREKA_URL)
print("ZUUL: ", ZUUL)
